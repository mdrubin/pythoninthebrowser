
.. contents::

"Python in the Browser" is *intended* to be customized and used on your own web pages or for providing live examples as part of tutorials and documentation.


The HTML
========

The simplest way to customize "Python in the Browser" is to embed it in a different web page.

In order for the interpreter textarea and code to operate correctly you will need to retain the following parts (perhaps modifying `the example links`_ if you want to provide different examples):


The Silverlight Control
-----------------------

The Silverlight control is embedded in a div with the id ``SilverlightControlHost``. You can position or style this div as you like, its only purpose is to display the 'Get Silverlight' badge and link if Silverlight is not installed. You shouldn't rename the element though, as the application hides it once it has successfully loaded.

The Silverlight control itself is embedded and configured by the 'object' element and its contents. You should leave this alone, including the id on the control itself (``SilverlightControl``) which is used by the Javascript to call into IronPython code. The one thing you can change is the application name (``<param name="source" value="app.xap"/>``), but if you change the name here you will need to provide the appropriate xap file or development folder.

There is a debugging div used by Silverlight to report errors (and configured in the Silverlight object parameters). This is the line:

    ``<div id='errorLocation' style="font-size: small;color: Gray;"></div>``
    
You should leave this element in the document, although you can move it. Only mess with it if you know what you are doing.


The Interpreter Textarea
------------------------

The textarea used for the interactive interpreter has an id of ``interpreter`` and is contained in a div with the id of ``interpreterhost``.

You can place this whole block wherever you want, but the only thing you should modify is the default text shown when the page loads: ``Python in the browser starting (requires Silverlight 2 Beta 2)..``...


The Javascript and CSS Files
----------------------------

The head block of the page includes several Javascript and CSS files used by the interpreter. Makes sure you include all of them in your page:

* onkeypress.js - used to call into IronPython for every keypress, except keys like cursor movements
* cursor_pos.js - used to report the selection start and end in the interpreter textarea
* error.js - used by Silverlight for reporting Python errors
* error.css - used by Silverlight for reporting Python errors


The Example Links
-----------------

This is one part of the HTML layout that you may want to customize, but you will have to also customize the corresponding part of ``app.py``.

The links to the examples are contained in a div with the id ``examples``. You can remove the examples simply by removing this whole block.

The Python code attaches event handlers to respond to the three links. These have ids of ``example1``, ``example2`` and ``example3``. These ids are used by the Python code and so if you change them in the HTML you also need to change the code that uses them.


The Python Code
===============



The Development Tools
=====================

Silverlight 2 applications don't work when viewed directly from the filesystem. 